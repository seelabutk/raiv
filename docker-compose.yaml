services:
  client:
    build:
      context: ./client
      dockerfile: docker/dev.Dockerfile
    volumes:
      - frontend-files:/opt/run/client
    develop:
      watch:
        - action: sync
          path: ./client
          target: /opt/run/client
          ignore:
            - node_modules
        - action: rebuild
          path: ./client/package.json
          
  server:
    env_file:
      - .env
    build:
      context: ./server
      dockerfile: docker/dev.Dockerfile
    volumes:
      - frontend-files:/opt/run/client
    depends_on:
        postgres:
          condition: service_healthy
    ports:
      - "127.23.133.219:40741:9000"
    environment:
      POSTGRES_URL: "postgres"
    develop:
      watch:
        - action: sync
          path: ./server
          target: /opt/run/server
  
  postgres:
    container_name: raiv-postgres
    image: postgres:15.3-alpine
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 30s
        timeout: 10s
        retries: 5

volumes:
  frontend-files:
  database:
